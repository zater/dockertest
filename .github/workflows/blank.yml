# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      - name: Setup Java JDK
        uses: actions/setup-java@v1.4.4
        with:
          # The Java version to make available on the path. Takes a whole or semver Java version, or 1.x syntax (e.g. 1.8 => Java 8.x). Early access versions can be specified in the form of e.g. 14-ea, 14.0.0-ea, or 14.0.0-ea.28
          java-version: 1.8
          # The package type (jre, jdk, jdk+fx)
          java-package: jdk
          # The architecture (x86, x64) of the package.
          architecture: x64
          # Path to where the compressed JDK is located. The path could be in your source repository or a local path on the agent.
          jdkFile: /jdk

      - name: Docker Login
        # You may pin to the exact commit or the version.
        # uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        uses: docker/login-action@v2.1.0
        env: 
          name: dockerusername
        with:
          # Server address of Docker registry. If not set then will default to Docker Hub
          registry: registry.cn-hangzhou.aliyuncs.com
          # Username used to log against the Docker registry
          username: ${{ secrets.user }}
          # Password or personal access token used to log against the Docker registry
          password: ${{ secrets.password }}
